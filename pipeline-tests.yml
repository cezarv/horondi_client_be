trigger: none

pr:
- development
- master

resources:
- repo: self

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: tests
  displayName: testing
  jobs:
  - job: tests
    displayName: tests
    pool:
      vmImage: $(vmImageName)
    steps:
     - task: DownloadSecureFile@1
       name: env
       inputs:
         secureFile: 'backend-test-env'
     - task: Bash@3
       inputs:
         targetType: 'inline'
         script: 'mv $(env.secureFilePath) .env.test && npm i'

     - task: DockerCompose@0
       inputs:
         containerregistrytype: 'Container Registry'
         dockerComposeFile: 'docker/docker-compose.yaml'
         action: 'Run a Docker Compose command'
         dockerComposeCommand: 'up -d'
     - task: Bash@3
       inputs:
         targetType: 'inline'
         script: 'npm run test'
     - task: Bash@3
       inputs:
         targetType: 'inline'
         script: 'ls'
     - task: SonarCloudPrepare@1
       inputs:
         SonarCloud: 'sonar-v2'
         organization: 'ita-social-projects'
         scannerMode: 'CLI'
         configMode: 'manual'
         cliProjectKey: 'ita-social-projects-horondi-client-be'
         cliSources: '.'
           extraProperties: |
             sonar.sources=.  \
             sonar.exclusions=__tests__/**, node_modules/**
             sonar.language=js 
             sonar.tests=./__tests__  \
             sonar.javascript.lcov.reportPaths=./coverage/lcov.info
             sonar.testExecutionReportPaths=./test-report.xml  
             sonar.sourceEncoding=UTF-8   
             sonar.host.url=https://sonarcloud.io
#     - task: SonarCloudPrepare@1
#       inputs:
#         SonarCloud: 'sonar-v2'
#         organization: 'ita-social-projects'
#         scannerMode: 'CLI'
#         configMode: 'file'

     - task: SonarCloudAnalyze@1
     
